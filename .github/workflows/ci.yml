name: Setup Sniffer with VPN

on:
  workflow_dispatch:

jobs:
  setup-sniffer-client:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install OpenVPN and SSH client
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn openssh-client sshpass

    - name: Start VPN connection
      run: |
        sudo openvpn --config $GITHUB_WORKSPACE/HamzaRauf.ovpn --daemon
        sleep 20 # Give some time for VPN to establish connection

    - name: Check OpenVPN logs
      run: |
        cat /var/log/syslog | grep openvpn

    - name: Verify VPN connection
      run: |
        ifconfig # Check if VPN interface is up
        ping -c 10 172.30.205.125 # Replace with the actual IP you want to test

    - name: SSH and update packages
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=10 root@172.30.205.125 'bash -s' <<'EOF'
        apt-get update
        EOF

    - name: SSH and install dependencies
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=10 root@172.30.205.125 'bash -s' <<'EOF'
        apt-get install -y build-essential libcurl4-openssl-dev libfftw3-dev libgcrypt-dev libglib2.0-dev libgoogle-perftools-dev libjson-c-dev liblzma-dev liblzo2-dev default-libmysqlclient-dev libpcap-dev libpng-dev librrd-dev libsnappy-dev libssh-dev libvorbis-dev libxml2-dev unixodbc-dev unzip
        EOF
        
    - name: SSH and clone sniffer repository
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=10 root@172.30.205.125 'bash -s' <<'EOF'
        if [ -d "sniffer" ]; then
          echo "Sniffer directory already exists."
        else
          git clone https://github.com/xFlowResearch/sniffer.git
        EOF
        
    - name: SSH and checkout desired commit
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=10 root@172.30.205.125 'bash -s' <<'EOF'
        cd sniffer
        git log --oneline --decorate
        git checkout db858a3f
        git checkout -b version-30.8.1
        echo "Setting up sniffer in client mode"
        EOF
